<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingNavigator1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="bindingNavigator1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAwPAtWPB/2wToVQ7DX9IAAAAASUVORK5CYII=
</value>
  </data>
</root>